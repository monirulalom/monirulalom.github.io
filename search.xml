<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>My blog is now using Hexo</title>
      <link href="/article/my-blog-is-now-using-hexo/"/>
      <url>/article/my-blog-is-now-using-hexo/</url>
      
        <content type="html"><![CDATA[<img src="/article/my-blog-is-now-using-hexo/hexo.png" title="Hexo"><p>I was using Jekyll for my blog. but there were some problems with that static site generator. I reinstalled Windows and was having trouble to build my website on my own PC. So I got frustrated and wanted to make a switch to a better static site generator. Searching the internet I learnt about Hexo. One thing I noticed is that it supports category and archive pages which were missing in Jekyll and Hexo is uses JavaScript. So , I made my decision to migrate my blog to Hexo.</p><p>Migration process took a long time. Finding a good looking theme and customizing took a long time. I also worked on SEO and other features for this blog. Disquss comment is removed and I am using Valine now. It is faster than Disquss and it has a cleaner interface.</p><p>Build procees in Hexo is faster than Jekyll. I have only few articles on my blog and it took so long to build with jekyll. I was very disappointed with the build time. Hexo generated the site fast and I am satisfied.</p><p>Hexo is based on JavaScript. I feel like home with JavaScript. Jekyll uses Ruby and I am not very familiar with ruby. I really enjoyed building the template for my own blog using JavaScript based templating.</p><p>Hopefully I am happy with Hexo and will publish content to my blog on regular intervals.</p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Test sending emails in PHP with XAMPP and MailHog</title>
      <link href="/article/test-sending-emails-in-php-xampp-mailhog/"/>
      <url>/article/test-sending-emails-in-php-xampp-mailhog/</url>
      
        <content type="html"><![CDATA[<p>Sending mail with PHP is easy. We can test it with a local SMTP server. MailHog is very useful for this purpose.</p><h2 id="MailHog"><a href="#MailHog" class="headerlink" title="MailHog"></a>MailHog</h2><p>MailHog is program thats creates a local SMTP mail sever for testing purposes. Let’s see how to configure MailHog.</p><a id="more"></a><h3 id="Download-MailHog"><a href="#Download-MailHog" class="headerlink" title="Download MailHog"></a>Download MailHog</h3><p>You can download MailHog from here . <a href="https://github.com/mailhog/MailHog/releases/latest" target="_blank" rel="noopener">https://github.com/mailhog/MailHog/releases/latest</a> . For 64 bit windows look for <a href="https://github.com/mailhog/MailHog/releases/download/v1.0.0/MailHog_windows_amd64.exe" target="_blank" rel="noopener">MailHog_windows_amd64.exe</a> and for 32 bit <a href="https://github.com/mailhog/MailHog/releases/download/v1.0.0/MailHog_windows_386.exe" target="_blank" rel="noopener">MailHog_windows_386.exe</a></p><h3 id="Configure-MailHog"><a href="#Configure-MailHog" class="headerlink" title="Configure MailHog"></a>Configure MailHog</h3><p>Rename the downloaded file to <code>mailhog.exe</code> and put it in <code>C:\mailhog</code> folder. So, the path for Mailhog executable will be <code>C:\mailhog\mailhog.exe</code>. Now add this to environment path variable.</p><p><img src="/images/mailhog-environment-path.jpg" alt="1565861962130"></p><p>Now open command prompt and type <code>mailhog</code> to run the SMTP server.</p><p><img src="/images/maillhog-command.jpg" alt="1565862665723"></p><p>Open <a href="http://localhost:8025/" target="_blank" rel="noopener">http://localhost:8025/</a> in your browser. You will see all the emails here you sent using PHP.</p><h3 id="Update-PHP-configuration"><a href="#Update-PHP-configuration" class="headerlink" title="Update PHP configuration"></a>Update PHP configuration</h3><p>Open <code>php.ini</code> and search for mail function. Set SMTP=127.0.0.1 and smtp_port=1025 in <code>php.ini</code> file.</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[mail function]</span></span><br><span class="line"><span class="comment">; For Win32 only.</span></span><br><span class="line"><span class="comment">; http://php.net/smtp</span></span><br><span class="line"><span class="attr">SMTP</span>=<span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="comment">; http://php.net/smtp-port</span></span><br><span class="line"><span class="attr">smtp_port</span>=<span class="number">1025</span></span><br></pre></td></tr></table></figure><h3 id="Update-sendmail-configuration"><a href="#Update-sendmail-configuration" class="headerlink" title="Update sendmail configuration"></a>Update sendmail configuration</h3><p>Open <code>sendmail.ini</code> from <code>C:\xampp\sendmail\</code> directory and put <code>smtp_server=127.0.0.1</code> and <code>smtp_port=1025</code>.</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[sendmail]</span></span><br><span class="line"><span class="attr">smtp_server</span>=<span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">smtp_port</span>=<span class="number">1025</span></span><br></pre></td></tr></table></figure><p>You can now use PHP’s <em>mail()</em> function to send email from your application.</p><h3 id="Sending-email"><a href="#Sending-email" class="headerlink" title="Sending email"></a>Sending email</h3><p>Now create a PHP file like the following</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">   $to = <span class="string">'recipients@email-address.com'</span>;</span><br><span class="line">   $subject = <span class="string">'Hello from XAMPP!'</span>;</span><br><span class="line">   $message = <span class="string">'This is a Mailhog test'</span>;</span><br><span class="line">   $headers = <span class="string">"From: your@email-address.com\r\n"</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> (mail($to, $subject, $message, $headers)) &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"SUCCESS"</span>;</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"ERROR"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>When you run the file you will receive an email in the MailHog inbox.</p><p><img src="/images/mailhog-ui.jpg" alt="1565863841973"></p><p>This will also be helpful for local WordPress installation for resetting passwords.</p>]]></content>
      
      
      
        <tags>
            
            <tag> Web Development </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP 05: PHP comments</title>
      <link href="/article/php-comments/"/>
      <url>/article/php-comments/</url>
      
        <content type="html"><![CDATA[<p>Comments are the part of the PHP code , that is not executed. It’s a note note to the person who is reading the code.</p><a id="more"></a><h2 id="Usage-of-comments"><a href="#Usage-of-comments" class="headerlink" title="Usage of comments"></a>Usage of comments</h2><ul><li>Let other programmers / developers understand what is written and what the code does .</li><li>Comments can help you ! It will remind you what you’ve written if you you come back after several days or years.</li></ul><h2 id="Types-of-comments"><a href="#Types-of-comments" class="headerlink" title="Types of comments"></a>Types of comments</h2><ol><li>Single line commnts</li><li>Block comments</li></ol><h2 id="Example-of-comments"><a href="#Example-of-comments" class="headerlink" title="Example of  comments"></a>Example of comments</h2><p>We can use <code>//</code> or <code>#</code> for single line comments and <code>/* */</code> for block comments. Look at the example below.</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment"># example of single line comment</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Hello world"</span>; <span class="comment">// this is also single line comment</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    This is an</span></span><br><span class="line"><span class="comment">    example of </span></span><br><span class="line"><span class="comment">    multi-line comment</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>See the output below. Comments have no effect in the output.</p><p><strong>Output:</strong></p><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">Hello world</span></span><br></pre></td></tr></table></figure><p>But do not try to nest comments.</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">/* this is</span></span><br><span class="line"><span class="comment">    commented */</span> but this don<span class="string">'t */</span></span><br><span class="line"><span class="string">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Web Development </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP 04: PHP Tags</title>
      <link href="/article/php-tags/"/>
      <url>/article/php-tags/</url>
      
        <content type="html"><![CDATA[<p>PHP codes must be enclosed by PHP tags. When PHP parser pareses a file , it looks for opening and closing PHP tags. It tells the parser when to start interpreting and when to stop. Reason for parsing in this manner is allowing to embed in different types of documents like HTML.</p><a id="more"></a><h2 id="Example-of-PHP-standard-tag"><a href="#Example-of-PHP-standard-tag" class="headerlink" title="Example of PHP standard tag"></a>Example of PHP standard tag</h2><p>Look at the code below</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Hello world"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>It is recommended to use PHP standard tag for compatibility an this tag can not be disabled by <code>php.ini</code> settings.</p><h2 id="Example-of-PHP-short-tag"><a href="#Example-of-PHP-short-tag" class="headerlink" title="Example of PHP short tag"></a>Example of PHP short tag</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Hello world"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>To use PHP short tag <code>short_open_tag</code> must be set to <code>On</code> in <code>php.ini</code> settings. But use of of PHP short open tag is not recommended.</p><p>If the file contains only PHP code, you can omit the end tag to avoid error due to whitespace added after the end tag. See the code below.</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Hello world"</span>;</span><br><span class="line">    <span class="comment">// code ends here with no PHP closing tag</span></span><br></pre></td></tr></table></figure><h3 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h3><p>The ASP tags <code>&lt;%</code>, <code>%&gt;</code>, <code>&lt;%=</code> and the script tag <code>&lt;script language=&quot;php&quot;&gt;</code> are removed from PHP 7.</p>]]></content>
      
      
      
        <tags>
            
            <tag> Web Development </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP 03: Run first PHP program</title>
      <link href="/article/run-first-php-program/"/>
      <url>/article/run-first-php-program/</url>
      
        <content type="html"><![CDATA[<p>In this tutorial we’ll learn how to run PHP program on local pc. For this purpose, You must have PHP environment installed on your pc.</p><a id="more"></a><p>If you don’t have PHP installed and running on your pc. Just visit the following links</p><ul><li><a href="https://monirulalom.com/2018/11/24/setting-up-environment-for-php-using-xampp.html">Setting up PHP environment for windows</a></li><li><a href="https://monirulalom.com/2018/11/26/setting-up-lamp-server-on-ubuntu.html">Setting up LAMP sever on Ubuntu</a></li></ul><h2 id="Write-your-first-PHP-program"><a href="#Write-your-first-PHP-program" class="headerlink" title="Write your first PHP program"></a>Write your first PHP program</h2><p>Create a file <code>hello.php</code> in root directory of your web server. If you are using XAMPP , root directory is <code>&quot;C:\xampp\htdocs&quot;</code> and in Ubuntu root directory is <code>/var/www/html/</code> . Write the following code in <code>hello.php</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Hello world"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>For writing code you can you any code editor you like. I recommend using <a href="https://code.visualstudio.com/" target="_blank" rel="noopener">Visual Studio Code</a> , which I use most of the time.</p><h2 id="Running-first-PHP-progran"><a href="#Running-first-PHP-progran" class="headerlink" title="Running first PHP progran"></a>Running first PHP progran</h2><p>When you’ve written the code , you need a browser to see the result. Now , open your bowser and go to <code>http://localhost/hello.php</code> . You will see something like this on the browser.</p><p><img src="/images/hello-world-php.png" alt="Hello world PHP"></p><h2 id="Explanation"><a href="#Explanation" class="headerlink" title="Explanation"></a>Explanation</h2><p>We created a file with <code>.php</code> extension . Files with <code>.php</code> extension are processed and showed in the browser. Generally <code>echo</code> statement shows a string to the output. Here the string is <code>&quot;Hello world&quot;</code>.</p><p>That’s really simple. Isn’t it ? Feel free to comment if you got any troubles.</p>]]></content>
      
      
      
        <tags>
            
            <tag> Web Development </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Divide and conquer algorithm</title>
      <link href="/article/divide-and-conquer-algorithms/"/>
      <url>/article/divide-and-conquer-algorithms/</url>
      
        <content type="html"><![CDATA[<p>Divide and conquer algorithm divides problems into smaller subproblems , solve the subproblems and combine the solutions to find the solution of the main problem. Let’s see an example .</p><a id="more"></a><h2 id="Practical-example"><a href="#Practical-example" class="headerlink" title="Practical example"></a>Practical example</h2><p>Suppose , you are given 8 balls , all balls are equal in weight except one ball. We’ll have to find the ball.</p><p><img src="/images/divide-and-conquer.png" alt="divide and conquer"></p><p>Let’s follow brute force approach to find the solution. We’ll compare all other balls with the ball no 1 .</p><p>If any ball is less in weight than the first , then the ball is the desired ball. Now , how many comparison will need for this process ? There will be <strong>7 comparison</strong>.</p><p>Let’s follow divide and conquer technique .</p><p>We can divide the balls in two parts and compare each other. Smaller ball is the one parts and that will be less in weight.</p><p><img src="/images/divide-and-conquer-example-1.png" alt="Divide and conquer example"></p><p>Now again divide the other part in half and compare.</p><p><img src="/images/divide-and-conquer-example-2.png" alt="Divide and conquer example 2"></p><p>We see blue part has less weight. So , again we divide and compare.</p><p><img src="/images/divide-and-conquer-example-3.png" alt="Divide and conquer example 3"></p><p>Now , only two balls remaining. The ball is the less weight is the smaller ball we were searching for ! This process takes <strong>4 comparison</strong>. So, this process has less complexity than the previous approach.</p><h2 id="Steps-for-Divide-and-conquer-algorithm"><a href="#Steps-for-Divide-and-conquer-algorithm" class="headerlink" title="Steps for Divide and conquer algorithm"></a>Steps for Divide and conquer algorithm</h2><ul><li><strong>Divide</strong>: Divide the problem into smaller sub problems</li><li><strong>Conquer</strong> : Solve smaller problems.</li><li><strong>Combine</strong> : Combine the results from the sub problems to find the solution of actual problem.<br>Divide and conquer algorithms are generally recursive.</li></ul><h2 id="Examples-of-Divide-and-conquer-algorithm"><a href="#Examples-of-Divide-and-conquer-algorithm" class="headerlink" title="Examples of Divide and conquer algorithm"></a>Examples of Divide and conquer algorithm</h2><ul><li>Binary Search</li><li>Quick Sort</li><li>Merge Sort</li><li>Integer Multiplication</li><li>Matrix Multiplication (Strassen’s algorithm)</li><li>Maximal Subsequence</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jekyll ! Awesome platform for blogging</title>
      <link href="/article/jekyll-awesome-platform-for-blogging/"/>
      <url>/article/jekyll-awesome-platform-for-blogging/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/fb/jekyll-awesome-blogging-platform.jpg" alt="Jekyll Awesome platform for blogging"></p><p>Wordpress and Blogger are the most popular platforms for blogging. I have been blogging using Blogger from the beginning. Recently I started using Jekyll. This website is made with Jekyll . In this post I’ll share my experience using jekyll.</p><a id="more"></a><h2 id="Features-of-Jekyll-I-like"><a href="#Features-of-Jekyll-I-like" class="headerlink" title="Features of Jekyll I like"></a>Features of Jekyll I like</h2><h4 id="Jekyll-is-light-and-fast"><a href="#Jekyll-is-light-and-fast" class="headerlink" title="Jekyll is light and fast"></a><strong>Jekyll is light and fast</strong></h4><p>Jekyll runs without databases ! No server side rendering ! Jekyll creates a static site and this loads really fast.</p><h4 id="Markdown-for-posts"><a href="#Markdown-for-posts" class="headerlink" title="Markdown for posts"></a>Markdown for posts</h4><p>I love using <a href="https://www.markdownguide.org/cheat-sheet" target="_blank" rel="noopener">markdown</a> to write blog posts. I use <a href="https://typora.io" target="_blank" rel="noopener">Typora</a> for editing markdown.</p><h4 id="Local-copy"><a href="#Local-copy" class="headerlink" title="Local copy"></a>Local copy</h4><p>I write my on my own pc and push it to the git repository. Syncing local copy with live website is not very easy for other platforms.</p><h4 id="Free-Github-hosting"><a href="#Free-Github-hosting" class="headerlink" title="Free Github hosting"></a>Free Github hosting</h4><p>My blog is hosted on a Github repository. I set custom domain for my blog . Also this blog has free SSL certificate from Github which is provided by Lets’s encrypt.</p><h2 id="Useful-links"><a href="#Useful-links" class="headerlink" title="Useful links"></a>Useful links</h2><p>Interested about Jekyll ? Here’s some links to follow.</p><ul><li><p><a href="https://jekyllrb.com/docs/" target="_blank" rel="noopener">Jekyll quickstart guide</a></p></li><li><p><a href="https://www.markdownguide.org/cheat-sheet" target="_blank" rel="noopener">Markdown Cheatsheet</a></p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Jekyll </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mobile first responsive web design with css media queries</title>
      <link href="/article/mobile-first-responsive-design-with-css-media-query/"/>
      <url>/article/mobile-first-responsive-design-with-css-media-query/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/mobile-first-responsive-css.jpg" alt="Mobile first responsive css with media queries" title="Mobile first responsive css with media queries"></p><p>Responsive web pages also called adaptive web pages which fits nicely fits on various devices like mobile , tablets , desktops. And mobile first approach first writing styles for mobile devices and then for larger devices like tablets and desktop. In this post , we’ll know why we need importance of mobile first design approach and how to implement it.</p><a id="more"></a><h2 id="Why-follow-mobile-first-approach"><a href="#Why-follow-mobile-first-approach" class="headerlink" title="Why follow mobile  first approach?"></a>Why follow mobile first approach?</h2><blockquote><p>Around 2 billion people are using smartphones in 2018</p></blockquote><p>This number is increasing and I estimate this number will cross 3 billion in next year ! This number is huge and people use their smartphones to visit websites more than desktops ! We should give priority to mobile users.</p><h2 id="How-to-write-mobile-first-CSS"><a href="#How-to-write-mobile-first-CSS" class="headerlink" title="How to write mobile first CSS"></a>How to write mobile first CSS</h2><p>Look at the example css code below.</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Extra small devices (portrait phones, less than 576px) */</span></span><br><span class="line"><span class="comment">/* No media query since this is the default css for extra small devices */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Small devices (landscape phones, 576px and up) */</span></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">min-width:</span> <span class="number">576px</span>) &#123; ... &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Medium devices (tablets, 768px and up) */</span></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">min-width:</span> <span class="number">768px</span>) &#123; ... &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Large devices (desktops, 992px and up) */</span></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">min-width:</span> <span class="number">992px</span>) &#123; ... &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Extra large devices (large desktops, 1200px and up) */</span></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">min-width:</span> <span class="number">1200px</span>) &#123; ... &#125;</span><br></pre></td></tr></table></figure><p>The example code above is according to Bootstrap’s breakpoints. In the first section we should write styles for mobile phones. Mobile phone styles will be the default styles. Then we can write styles for larger devices.</p><h2 id="Benefits-of-mobile-first-approach"><a href="#Benefits-of-mobile-first-approach" class="headerlink" title="Benefits of mobile first approach"></a>Benefits of mobile first approach</h2><ul><li><strong>Better user experience</strong>: When you think about mobile users first , web page tends to become minimal . Unnecessary menu items , links , buttons get reduced first !</li><li><strong>Compatibility</strong>: Since in mobile first approach , mobile style is the default style very old mobile browsers will be able to show websites without any problems.</li><li><strong>Fast loading</strong>: Mobile first CSS loads fast on mobile browser.</li></ul><h2 id="Some-disadvantages"><a href="#Some-disadvantages" class="headerlink" title="Some disadvantages"></a>Some disadvantages</h2><p>You will have to use developer tools to view how it will look on mobile devices . If you are familiar with desktop first approach , then this may seem a little awkward to you. But when you get used to use mobile first approach, this will be fun !</p><p>Comment below, how you felt coding mobile first CSS for first time ?</p>]]></content>
      
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> HTML </tag>
            
            <tag> Web Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP 02: Setting up LAMP sever on Ubuntu</title>
      <link href="/article/setting-up-lamp-server-on-ubuntu/"/>
      <url>/article/setting-up-lamp-server-on-ubuntu/</url>
      
        <content type="html"><![CDATA[<p>LAMP stands for Linux, Apache, PHP and MySQL . It is actually a set of open source software packages which allows us to run dynamic web pages using PHP. In this post , we’ll learn how to set up LAMP on local ubuntu machine.</p><a id="more"></a><p>First open the terminal and run the following command</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install apache2 mysql-server php libapache2-mod-php php-mcrypt php-mysql curl phpmyadmin php-mbstring php-gettext</span><br><span class="line">sudo a2enmod mcrypt mbstring rewrite</span><br></pre></td></tr></table></figure><p>You can simply copy paste the code to avoid any error. You can go with the default settings for the installation.</p><p>Open <code>apache2.conf</code> file in Gedit using the following command</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -H gedit /etc/apache2/apache2.conf</span><br></pre></td></tr></table></figure><p>Add following line to the end of the <code>apache2.conf</code> file</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Include</span> <span class="regexp">/etc/</span>phpmyadmin<span class="regexp">/apache.conf</span></span><br></pre></td></tr></table></figure><p>and update</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">&lt;Directory /var/www/&gt;</span><br><span class="line">Options Indexes FollowSymLinks</span><br><span class="line">AllowOverride None</span><br><span class="line">Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><p>to</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">&lt;Directory /var/www/&gt;</span><br><span class="line">Options Indexes FollowSymLinks</span><br><span class="line">AllowOverride all</span><br><span class="line">Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><p>Now , run the following command</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo chown <span class="variable">$USER</span> /var/www/html</span><br><span class="line">sudo chmod 755 -R /var/www/html</span><br><span class="line">sudo systemctl restart apache2</span><br></pre></td></tr></table></figure><p>Now open <strong><a href="http://localhost/" target="_blank" rel="noopener">http://localhost/</a></strong> on your browser. You will see a page like this.</p><p><img src="/images/apache-default-page.png" alt="Apache default page"></p><p>We have successfully installed LAMP on Ubuntu. If you faced any problem , feel free to comment below.</p>]]></content>
      
      
      
        <tags>
            
            <tag> Web Development </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP 01: Setting up PHP environment for windows</title>
      <link href="/article/setting-up-environment-for-php-using-xampp/"/>
      <url>/article/setting-up-environment-for-php-using-xampp/</url>
      
        <content type="html"><![CDATA[<p>To run PHP code from our computer we need to get a PHP server. There are several ways to do this. Installing different packages are really painful. There is an all in one installer called XAMPP which allows you to run Apache, PHP, MySQL together.</p><a id="more"></a><h2 id="Downloading-XAMPP"><a href="#Downloading-XAMPP" class="headerlink" title="Downloading XAMPP"></a>Downloading XAMPP</h2><p>You can search from Google or any search engine you like by writing “Download XAMPP” or you you can directly follow this link <a href="https://www.apachefriends.org/download.html" target="_blank" rel="noopener">https://www.apachefriends.org/download.html</a> . Yow will see something like this.</p><p><img src="/images/xamppdownload.png" alt="XAMPP download" title="XAMPP Download"></p><p>Download the latest version from here. It is always good to go with the latest version.</p><h2 id="Installing-XAMPP"><a href="#Installing-XAMPP" class="headerlink" title="Installing XAMPP"></a>Installing XAMPP</h2><p>At fist run the downloaded installer. Setup window will appear.</p><p><img src="/images/xampp-install.png" alt="xampp install" title="xampp install"></p><p>Simply click <strong>“Next”</strong> continue.</p><p><img src="/images/xampp-select-component.png" alt="xampp select component"></p><p>You can install the the available components or select the components as shown in the image above for minimal installation.</p><p><img src="/images/xampp-select-installation-folder.png" alt="xampp select install location"></p><p>You can select the location for installation here. Default location is <strong>“C:\xampp”</strong></p><p><img src="/images/uncheck-bitnami.png" alt="xampp-unchek-bitnami"></p><p>Uncheck “Learn more about Bitnami for XAMPP” and click <strong>Next</strong>. Main XAMPP installation proccess will start now.</p><p><img src="/images/xampp-installing.png" alt="xampp-installing"></p><p>You will see this window after the process is completed.</p><p><img src="/images/xampp-install-complete.png" alt="xampp install complete"></p><p>Click the <strong>Finish</strong> button to launch <strong>“XAMPP Control Panel”</strong> .</p><p><img src="/images/xampp-control-panel-start-server.png" alt="XAMPP control panel start server"></p><p>Click the <strong>“Start”</strong> button beside to <strong>“Apache”</strong> to start the server. You may see an warning from windows firewall if running the apache server for the first time.</p><p><img src="/images/allow-firewall-xampp.png" alt="Allow firewall xampp"></p><p>Check the tick for both public and private network and click <strong>“Allow access”</strong>.</p><p>Open <strong><a href="http://localhost" target="_blank" rel="noopener">http://localhost</a></strong> in the bowser an you will see XAMPP welcome page. Now we can run PHP code on our local PC !</p>]]></content>
      
      
      
        <tags>
            
            <tag> Web Development </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Greedy algorithms</title>
      <link href="/article/greedy-algorthms-with-examples/"/>
      <url>/article/greedy-algorthms-with-examples/</url>
      
        <content type="html"><![CDATA[<h2 id="What-is-Greedy-algorithm"><a href="#What-is-Greedy-algorithm" class="headerlink" title="What is Greedy algorithm ?"></a>What is Greedy algorithm ?</h2><p>Greedy algorithms always find for optimal solution of a problem by following greedy approach. This solution may require minimum or maximum result. There will be some feasible solutions for the problem and this algorithm will find the optimal one.</p><a id="more"></a><p>Let’s see an example to understand the approach.</p><p>Suppose, I want to place Y from X (P:X → Y). There might be several ways to reach the destination.</p><p>Possible solutions:</p><ul><li><p>S1: Go by feet (walking)</p></li><li><p>S2: Go by bus</p></li><li><p>S3: Go by train</p></li><li><p>S4: Go by flight</p></li></ul><p>….</p><p>….</p><ul><li>Sn: There may be n solutions</li></ul><p>There is constraint for the problem. We have to reach the destination within <strong>8 hours</strong> . Now , we need to find feasible solutions and an optimal solution for the problem.</p><h2 id="What-is-feasible-solution"><a href="#What-is-feasible-solution" class="headerlink" title="What is feasible solution ?"></a>What is feasible solution ?</h2><p>Any subset of the solutions for a problem that satisfies the constraints of the problem.Solution S3: Go by train and S4: Go by flight can satisfy the condition. We can call S3 and S4 are the feasible solution for the problem. So, subset of feasible solution is {S3,S4}</p><h2 id="What-is-optimal-solution"><a href="#What-is-optimal-solution" class="headerlink" title="What is optimal solution ?"></a>What is optimal solution ?</h2><p>Suppose, need to go to the destination with minimum cost. We can go to destination B at the minimum cost if we use train . So solution S4 is the optimal solution.Feasible solution can be found for either minimum value or maximum value. A feasible solution that minimizes or maximizes given objective function is known as optimal solution.</p><p>However we can write general form of the algorithm like the following.</p><figure class="highlight gml"><table><tr><td class="code"><pre><span class="line">Algorithm Greedy(a,n)</span><br><span class="line"><span class="comment">// a[1:n] contains the n input</span></span><br><span class="line">&#123;</span><br><span class="line">    solution := ϕ <span class="comment">// Initialize the solution</span></span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span> to n <span class="keyword">do</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="symbol">x</span> := Select(a);</span><br><span class="line">        <span class="keyword">if</span> Feasible(solution,<span class="symbol">x</span>) <span class="keyword">then</span></span><br><span class="line">        solution := Union(solution,<span class="symbol">x</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> solution;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Fast Coding HTML , CSS with Emmet</title>
      <link href="/article/fast-html-css-coding-with-emmet/"/>
      <url>/article/fast-html-css-coding-with-emmet/</url>
      
        <content type="html"><![CDATA[<p>Emmet is very popular tool for writing HTML, CSS code rapidly. This can greatly improve your workflow. Emmet can be used in all popular text editors like Visual Studio Code, Brackets, Notepad++ , Sublime Text , Atom etc. Visual Studio Code comes with built in Emmet support. I recommend using Visual Studio Code to follow this post. Any code editor with Emmet installed is also good to go. In this post I’ll discuss about using Emmet efficiently.</p><a id="more"></a><p>Open a blank HTML file and type <code>html:5</code> or <code>!</code> and hit <code>Tab</code> Key to expand. <code>Enter</code> key should also work for Visual Studio code.</p><p><img src="/images/html5.gif" alt="Emmet html5 markup tutorial" title="Emmet html5 markup tutorial"></p><p>Looks fun ! right ? Let’s go to deep to find more fun !</p><h2 id="Generating-HTML-elements-with-class-and-id"><a href="#Generating-HTML-elements-with-class-and-id" class="headerlink" title="Generating HTML elements with class and id"></a>Generating HTML elements with class and id</h2><p>We can use css like syntax for generating HTML elements. To create an element with a class syntax will be like <code>elem.classname</code>. Suppose, we need to create a <code>div</code> tag with class <code>class1</code>. To get the result we should write <code>div.class1</code> and hit <code>Tab</code>.</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"class1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>If you want to add multiple class put the classname in succession. i.e <code>p.class1.class2.class3</code></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"class1 class2 class3"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>For generating elements with id syntax will be like <code>elem#id</code> i.e <code>h2.heading</code></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">id</span>=<span class="string">"heading"</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Note: When generating <code>div</code> you can use <code>.class</code> or <code>#id</code> directly without writing the element name .</p><h2 id="Child-elements"><a href="#Child-elements" class="headerlink" title="Child elements"></a>Child elements</h2><p>We can use <code>&gt;</code> to create a child element of an element. <code>ul&gt;li&gt;a</code> will produce the following code.</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Sibling-element"><a href="#Sibling-element" class="headerlink" title="Sibling element"></a>Sibling element</h2><p>We can use <code>+</code> sign to write sibling elements. <code>h1+h2+h3</code> will produce the following output.</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Multiply-element-with-numbering"><a href="#Multiply-element-with-numbering" class="headerlink" title="Multiply element with numbering"></a>Multiply element with numbering</h2><p><code>*</code> sign can be used to generate multiple element and <code>$</code> sign for numbering and <code>{ }</code> is to insert text inside the element. i.e <code>ul&gt;li*5&gt;a{Item $}</code></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Item 1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Item 2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Item 3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Item 4<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Item 5<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Lorem-Ipsum"><a href="#Lorem-Ipsum" class="headerlink" title="Lorem Ipsum"></a>Lorem Ipsum</h2><p>We can generate Lorem ipsum dummy text. Just write <code>lorem</code> and hit <code>Tab</code>.</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">Lorem ipsum dolor, sit amet consectetur adipisicing elit. Inventore, dolor earum ex magni ipsum illum, sapiente odio laboriosam velit debitis corporis, quisquam sit. Ipsam, nisi totam aperiam quos recusandae eum!</span><br></pre></td></tr></table></figure><p>We can also set the number of words for generated dummy text , i.e <code>lorem5</code> will generate text with 5 words.</p><h2 id="Writing-css-with-Emmet"><a href="#Writing-css-with-Emmet" class="headerlink" title="Writing css with Emmet"></a>Writing css with Emmet</h2><p>Emmet has abbreviation for known CSS properties, like <code>margin</code> is <code>m</code> , <code>padding</code> is <code>p</code> , <code>border-bottom</code> is <code>bdb</code> etc.<br>We can directly inject values like <code>m10</code> for <code>margin:10px</code> , <code>m10-20</code> for <code>margin:10px 20px</code></p><h2 id="Units"><a href="#Units" class="headerlink" title="Units"></a>Units</h2><p>Emmet has alias for units.</p><ul><li>px → default</li><li>p → %</li><li>e → em</li><li>r → rem</li><li>x → ex</li></ul><p>We can use this alias units</p><ul><li><code>w100p</code> → <code>width:100%</code></li><li><code>m10e</code> → <code>margin:10em</code><h2 id="Multiple-css-properties"><a href="#Multiple-css-properties" class="headerlink" title="Multiple css properties"></a>Multiple css properties</h2>We can write multiple css properties together using <code>+</code> sign. i.e <code>m10+p10+ovh+db</code></li></ul><p><img src="/images/multiple-css-properties-emmet-tutorial.gif" alt="Multiple css properties emmet" title="Multiple css properties emmet"></p><h2 id="Going-further"><a href="#Going-further" class="headerlink" title="Going further"></a>Going further</h2><p>I’ve shown very fundamental and most common usage for Emmet. You can learn more from</p><ul><li><a href="https://docs.emmet.io/cheat-sheet/" target="_blank" rel="noopener" title="Emmet Cheatsheet">Emmet Cheatsheet</a></li><li><a href="https://docs.emmet.io/" target="_blank" rel="noopener" title="Emmet Documentation">Emmet Documentation</a></li></ul><p>I love to code with Emmet . What about you ? Feel free to comment below !</p>]]></content>
      
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> HTML </tag>
            
            <tag> Web Development </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to install CodeBlocks for C/C++</title>
      <link href="/article/install-codeblocks-windows/"/>
      <url>/article/install-codeblocks-windows/</url>
      
        <content type="html"><![CDATA[<p>CodeBlocks is a very popular IDE for C/C++ which runs on Windows , Mac and Linux platforms. It’s free and open source. Installation prodedure for CodeBlocks is very easy . Let’s see the installation process.</p><a id="more"></a><h2 id="Installing-Codeblocks-in-windows"><a href="#Installing-Codeblocks-in-windows" class="headerlink" title="Installing Codeblocks in windows"></a>Installing Codeblocks in windows</h2><h4 id="Step-1-Download-the-installer"><a href="#Step-1-Download-the-installer" class="headerlink" title="Step 1: Download the installer"></a>Step 1: Download the installer</h4><p>Go to Binary download page for CodeBlocks <a href="http://www.codeblocks.org/downloads/26#windows" target="_blank" rel="noopener" title="Download CodeBlocks for windows">http://www.codeblocks.org/downloads/26</a>{:target=”_blank”} . You will see available installer there . Download the installer with MinGW compiler, installer filename will be like <code>codeblocks-xx.xxmingw-setup.exe</code></p><p><img src="/images/download-and-install-codeblocks.png" alt="Download and install Codeblocks windows" title="Download page for CodeBlocks"></p><h4 id="Step-2-Installing"><a href="#Step-2-Installing" class="headerlink" title="Step 2: Installing"></a>Step 2: Installing</h4><p>Run the downloaded installer and install with default options.</p><h2 id="Installing-CodeBlocks-in-Ubuntu"><a href="#Installing-CodeBlocks-in-Ubuntu" class="headerlink" title="Installing CodeBlocks in Ubuntu"></a>Installing CodeBlocks in Ubuntu</h2><h4 id="Installing-from-terminal"><a href="#Installing-from-terminal" class="headerlink" title="Installing from terminal"></a>Installing from terminal</h4><p>CodeBlocks will run with default gcc compiler. If you want to write c++ code, you need to add a compiler. To do that , run the following command in the terminal to install <code>g++</code> and CodeBlocks IDE.</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> update</span><br><span class="line">sudo apt-<span class="builtin-name">get</span> upgrade</span><br><span class="line">sudo apt-<span class="builtin-name">get</span> install g++</span><br><span class="line">sudo apt-<span class="builtin-name">get</span> install codeblocks -y</span><br></pre></td></tr></table></figure><h4 id="Installing-from-Ubuntu-Software-Center"><a href="#Installing-from-Ubuntu-Software-Center" class="headerlink" title="Installing from Ubuntu Software Center"></a>Installing from Ubuntu Software Center</h4><p>CodeBlocks is also available in Ubuntu Software Center. You can search and install it.</p><p><img src="/images/codeblocks-ubuntu-software-center.png" alt="CodeBlocks install from Ubuntu Software Center" title="CodeBlocks install from Ubuntu Software Center"></p><p>For details you can also see the documentaion on the official site.</p><ul><li><a href="http://wiki.codeblocks.org/index.php/Installing_Code::Blocks" target="_blank" rel="noopener" title="Ubuntu Wiki for CodeBlocks installation">Ubuntu Wiki for CodeBlocks installation</a>{:target=”_blank”}</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> C++ </tag>
            
            <tag> Programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP 00: Introduction to PHP</title>
      <link href="/article/introduction-to-php/"/>
      <url>/article/introduction-to-php/</url>
      
        <content type="html"><![CDATA[<p>PHP (Hypertext Preprocessor) is a popular programming language. This language is used to create dynamic websites that interacts with databases. This will be a long series of post to guide the beginners to help in the learning process of PHP.</p><a id="more"></a><h2 id="Features-of-PHP"><a href="#Features-of-PHP" class="headerlink" title="Features of PHP"></a>Features of PHP</h2><ul><li><p>PHP is built for Web. It’s a server side scripting language.Though various languages can be used for server side scripting , PHP is always the best choice.</p></li><li><p>PHP can be easily embedded with HTML. We can create dynamic , database driven websites.</p></li><li><p>PHP supports various database types like MySQL, Oracle , PostgreSQL etc.</p></li><li><p>PHP is very fast ! In recent versions of PHP like PHP7.0 it shows very good performance.</p></li></ul><h2 id="Why-you-should-learn-PHP"><a href="#Why-you-should-learn-PHP" class="headerlink" title="Why you should learn PHP ?"></a>Why you should learn PHP ?</h2><ul><li>Most of the website are built with PHP.</li><li>Learning PHP is easy . It has C/C++ like syntax.</li><li>PHP has a huge community. You can get help from others from a site like StackOverflow.</li><li>A lot of PHP jobs are available. There should be constant demand for PHP developers. PHP programmers are highly paid.</li></ul><h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul><li>Knowledge of HTML and CSS will be very helpful</li><li>Knowledge about various database will be helpful.</li><li>You don’t need to learn C/C++ or Java for learning PHP. If you learned any of these programming languages , learning PHP will be very easy for you.</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Web Development </tag>
            
            <tag> Programming </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WooCommerce Hints for Brackets extension released</title>
      <link href="/article/woocommerce-hints-for-brackets-extension-released/"/>
      <url>/article/woocommerce-hints-for-brackets-extension-released/</url>
      
        <content type="html"><![CDATA[<p>Today I have released an extension for one of my favorite code editor Brackets. I frequently work with WordPress and WooCommerce. An extension was available for getting WordPress related function hints but I was feeling the need of having something like this for WooCommerce also. Unfortunately there was not any feature in Brackets is available or no extension was available for this purpose.</p><p>So, I decided to build an extension for me and fellow developers. Here is some information about the extension.</p><h1 id="WooCommerce-Hints-for-Brackets"><a href="#WooCommerce-Hints-for-Brackets" class="headerlink" title="WooCommerce Hints for Brackets"></a>WooCommerce Hints for Brackets</h1><p>This extension adds auto-completion capability for WooCommerce 2.2+ functions.</p><p><strong><em>Features of this extension:</em></strong></p><p>✅ 1100+ functions , actions and filter auto-suggest/auto-completion support.</p><p><strong><em>Installation:</em></strong></p><p>You can install this extension with Extension manager. Search for it and click install. For detailed instruction visit the <a href="https://github.com/monirulalom/woocommerce-hints-for-brackets/wiki/Installation" target="_blank" rel="noopener">Wiki</a></p><p><strong><em>How to contribute?</em></strong></p><p>If you have any suggestion or you want to help, just fork this repository, make your changes and send a pull request. If you can’t code, simply open a <a href="https://github.com/monirulalom/woocommerce-hints-for-brackets/issues" target="_blank" rel="noopener">new issue</a> and I’ll do my best to help you!</p>]]></content>
      
      
      
        <tags>
            
            <tag> Brackets </tag>
            
            <tag> Extension </tag>
            
            <tag> WordPress </tag>
            
            <tag> WooCommerce </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
